---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "wordpress.fullname" . }}
  labels:
    app: {{ include "wordpress.name" . }}
    release: {{ .Release.Name }}
    {{- if .Values.statefulSetLabels }}
    {{- toYaml .Values.statefulSetLabels | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ include "wordpress.name" . }}
      release: {{ .Release.Name }}
  serviceName: {{ include "wordpress.fullname" . }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ include "wordpress.name" . }}
        release: {{ .Release.Name }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
      annotations:
        # Reload the pod when values-local.yaml changes, so the ansible playbook
        # gets re-run.
        checksum/config: {{ printf "%s%s" (include (print $.Template.BasePath "/ansible-vars.yaml") .) (include (print $.Template.BasePath "/secrets.yaml") .) | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        runAsUser: 33
        runAsGroup: 33
        fsGroup: 33
        runAsNonRoot: true
      {{- if .Values.initImage.imagePullSecretName }}
      imagePullSecrets:
        - name: {{ .Values.initImage.imagePullSecretName }}
      {{- end }}
      enableServiceLinks: {{ .Values.enableServiceLinks }}
      initContainers:
        - name: init-{{ .Chart.Name }}
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          # command: ['sh', '-c', '/usr/local/bin/wp --info > /var/www/html/wp-info.txt & echo "sleeping now" && sleep 600']
          volumeMounts:
            - name: {{ include "wordpress.name" . }}-wp-storage
              mountPath: /var/www/html
            - name: {{ include "wordpress.name" . }}-wp-content
              mountPath: {{ .Values.wordpress.wp_content.mount_path }}
            - name: ansible-vars
              mountPath: /var/local/ansible/roles/wordpress-init/defaults/main.yml
              subPath: main.yml
            - name: ansible-secrets
              mountPath: /var/local/ansible/secrets
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.wordpress.site.probe_path }}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.wordpress.site.probe_path }}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          volumeMounts:
            - name: {{ include "wordpress.name" . }}-wp-storage
              mountPath: /var/www/html
            - name: {{ include "wordpress.name" . }}-wp-content
              mountPath: {{ .Values.wordpress.wp_content.mount_path }}
            - name: htuploads
              mountPath: {{ .Values.wordpress.wp_content.mount_path }}/uploads/.htaccess
              subPath: .htaccess
          resources:
{{ toYaml .Values.resources | indent 12 }}
        {{- if or .Values.backup.enabled .Values.wordpress.mu_cron.enabled .Values.customCron }}
        - name: {{ .Chart.Name }}-cron
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          command:
            # Busybox's cron daemon.
            - "crond"
            # Run in foreground.
            - "-f"
            # Log to stderr, with level 6.
            - "-d"
            - "6"
          # `crond` must be run as root, so we override the pod's security context.
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
            - name: {{ include "wordpress.name" . }}-wp-storage
              mountPath: /var/www/html
            - name: {{ include "wordpress.name" . }}-wp-content
              mountPath: {{ .Values.wordpress.wp_content.mount_path }}
            - name: ansible-vars
              mountPath: /var/local/ansible/roles/wordpress-backup/defaults/main.yml
              subPath: main.yml
            - name: ansible-secrets
              mountPath: /var/local/ansible/secrets
            - name: cron-schedule
              mountPath: /etc/crontabs/
            {{- if .Values.backup.sshPrivateKey }}
            - name: ssh-private-key
              mountPath: /var/local/ssh-private-key
            - name: ssh-known-hosts
              mountPath: /etc/ssh/ssh_known_hosts
              # We need to set subPath so it does not create an ssh_known_hosts
              # directory with an ssh_known_hosts file in it
              subPath: ssh_known_hosts
            {{- end }}
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: {{ include "wordpress.name" . }}-wp-storage
          emptyDir: {}
        - name: {{ include "wordpress.name" . }}-wp-content
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "wordpress.fullname" . }}-wp-content{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: ansible-secrets
          secret:
            secretName: {{ include "wordpress.fullname" . }}-ansible-secrets
            items:
              - key: secret-vars.yaml
                path: secret-vars.yaml
        {{- if .Values.backup.sshPrivateKey }}
        - name: ssh-private-key
          secret:
            secretName: {{ include "wordpress.fullname" . }}-ansible-secrets
            items:
              - key: ssh-private-key
                path: ssh-private-key
        - name: ssh-known-hosts
          secret:
            secretName: {{ include "wordpress.fullname" . }}-ansible-secrets
            items:
              - key: ssh-known-hosts
                path: ssh_known_hosts
        {{- end }}
        - name: ansible-vars
          configMap:
            name: {{ include "wordpress.fullname" . }}-ansible-vars
        - name: htuploads
          configMap:
            name: {{ include "wordpress.fullname" . }}-htuploads
        - name: cron-schedule
          configMap:
            name: {{ include "wordpress.fullname" . }}-cron-schedule
            items:
            - key: www-data
              # This is the name of the user with id 33 in the cli container.
              path: "xfs"
